var searchIndex = JSON.parse('{\
"lineup_rust":{"doc":"Queue Data Structure","t":"AIDLLFFKLKLKLKLLLLMKLKLLLL","n":["queue","QueueActions","QueueStruct","borrow","borrow_mut","create_empty","create_queue","dequeue","dequeue","destroy","destroy","enqueue","enqueue","enqueue_many","enqueue_many","fmt","from","into","queue","remove_at","remove_at","remove_first","remove_first","try_from","try_into","type_id"],"q":[[0,"lineup_rust"],[1,"lineup_rust::queue"]],"d":["","","","","","Will create a new empty queue","Will create a new queue with the given items","","Will remove items from the end of the queue","","Will remove all items from the queue","","Will add an item to the end of the queue","","Will add multiple items to the end of the queue ","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","Will remove an item at a given index if the index is valid …","","Will remove the first item from the queue","","",""],"i":[0,0,0,1,1,0,0,9,1,9,1,9,1,9,1,1,1,1,1,9,1,9,1,1,1,1],"f":[0,0,0,[[]],[[]],[[],1],[[[3,[2]]],1],[[]],[1],[[]],[1],[2],[[1,2]],[[[3,[2]]]],[[1,[3,[2]]]],[[1,4],5],[[]],[[]],0,[6],[[1,6]],[[]],[1],[[],7],[[],7],[[],8]],"c":[],"p":[[3,"QueueStruct"],[15,"i32"],[3,"Vec"],[3,"Formatter"],[6,"Result"],[15,"usize"],[4,"Result"],[3,"TypeId"],[8,"QueueActions"]]},\
"queues":{"doc":"Data Structures","t":"AIDLLFFKLKLKLKLLLLMKLKLLLL","n":["queue","QueueActions","QueueStruct","borrow","borrow_mut","create_empty","create_queue","dequeue","dequeue","destroy","destroy","enqueue","enqueue","enqueue_many","enqueue_many","fmt","from","into","queue","remove_at","remove_at","remove_first","remove_first","try_from","try_into","type_id"],"q":[[0,"queues"],[1,"queues::queue"]],"d":["","","","","","Will create a new empty queue","Will create a new queue with the given items","","Will remove items from the end of the queue","","Will remove all items from the queue","","Will add an item to the end of the queue","","Will add multiple items to the end of the queue ","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","Will remove an item at a given index if the index is valid …","","Will remove the first item from the queue","","",""],"i":[0,0,0,1,1,0,0,9,1,9,1,9,1,9,1,1,1,1,1,9,1,9,1,1,1,1],"f":[0,0,0,[[]],[[]],[[],1],[[[3,[2]]],1],[[]],[1],[[]],[1],[2],[[1,2]],[[[3,[2]]]],[[1,[3,[2]]]],[[1,4],5],[[]],[[]],0,[6],[[1,6]],[[]],[1],[[],7],[[],7],[[],8]],"c":[],"p":[[3,"QueueStruct"],[15,"i32"],[3,"Vec"],[3,"Formatter"],[6,"Result"],[15,"usize"],[4,"Result"],[3,"TypeId"],[8,"QueueActions"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
